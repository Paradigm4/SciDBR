% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbops.R
\name{index_lookup}
\alias{index_lookup}
\title{SciDB index lookup operator
The \code{index_lookup} function is a wrapper to the SciDB `index_lookup` operator.
It produces a new SciDB dimension array that joins the unqiue indices defined in the array
\code{I} with values looked up in array \code{X} for attribute \code{attr}. Use
the \code{index_lookup} with the \code{unique} and \code{sort} functions.}
\usage{
index_lookup(x, I, attr, new_attr)
}
\arguments{
\item{x}{SciDB array}

\item{I}{single-attribute SciDB array}

\item{attr}{character string attribute name from the \code{x} array}

\item{new_attr}{optional name for the new attribute}
}
\value{
a SciDB array
}
\description{
SciDB index lookup operator
The \code{index_lookup} function is a wrapper to the SciDB `index_lookup` operator.
It produces a new SciDB dimension array that joins the unqiue indices defined in the array
\code{I} with values looked up in array \code{X} for attribute \code{attr}. Use
the \code{index_lookup} with the \code{unique} and \code{sort} functions.
}
\note{
If \code{attr} is missing the first listed attribute in \code{x} will be used. If \code{I} has more than
one attribute, only its first listed attribute is used.
}
\examples{
\dontrun{
data("iris")
x <- as.scidb(iris)

# Create a unique list of elements of the "Species" attribute.
# Note that we choose to defer evaluation of this expression.
y <- unique(sort(project(x,"Species")), eval=FALSE)

# Append a new attribute to the array x called "Species_index" that
# enumerates the unique values of the "Species" attribute:
z <- index_lookup(x, y, "Species", eval=FALSE)

print(head(z))
}
}

